{"version":3,"sources":["components/Navigation.js","components/Logo.js","components/ImageLinkForm.js","components/Rank.js","components/FaceRecognition.js","components/SignIn.js","components/Register.js","App.js","serviceWorker.js","index.js","components/brain.png"],"names":["Navigation","onRouteChange","isSignedIn","style","display","justifyContent","onClick","className","Logo","options","max","height","width","paddingTop","alt","src","brain","ImageLinkForm","onInputChange","onButtonSubmit","type","onChange","Rank","name","entries","FaceRecognition","imgUrl","box","id","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","SignIn","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","user","loadUser","this","htmlFor","ame","cursor","React","Component","Register","onNameChange","app","Clarifai","App","apiKey","initialState","input","route","joined","data","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","console","log","models","predict","FACE_DETECT_MODEL","count","Object","assign","catch","err","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.ccd0839b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Navigation = ({onRouteChange,isSignedIn}) => {\r\n\t\tif(isSignedIn){return(\r\n\t\t<nav style={{display:'flex',justifyContent:'flex-end'}}>\r\n\t\t\t<p onClick={()=>onRouteChange('signout')}className='f3 link dim black underline pa3 pointer'>Sign Out</p>\r\n\r\n\t\t</nav>);\r\n\t\t}else{return(\r\n\t\t\t<nav style={{display:'flex',justifyContent:'flex-end'}}>\r\n\t\t\t<p onClick={()=>onRouteChange('signin')}className='f3 link dim black underline pa3 pointer'>Sign In</p>\r\n\t\t\t<p onClick={()=>onRouteChange('register')}className='f3 link dim black underline pa3 pointer'>Register</p>\r\n\t\t\t</nav>\r\n\t\t\t);\r\n\t\t} \r\n\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport './Logo.css';\r\nimport brain from './brain.png'\r\n\r\nconst Logo = () => {\r\n\treturn(\r\n\t\t<div className='ma4 mto '>\r\n\t\t\t<Tilt className=\"Tilt br2 shadow-2\" options={{ max : 55 }} style={{ height: 150, width: 150 }} >\r\n\t \t\t\t<div className=\"Tilt-inner pa3\"> \r\n\t \t\t\t\t<img style={{paddingTop:'3px'}} alt='logo' src={brain}/> \r\n\t \t\t\t</div>\r\n\t\t\t</Tilt>\r\n\t\t</div>\t\r\n\t\t);\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport './ImageLinkForm.css';\r\n\r\nconst ImageLinkForm = ({onInputChange,onButtonSubmit}) => {\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<p className='f3'>\r\n\t\t\t\t{'This Robot will detect faces,give it a try.'}\r\n\t\t\t</p>\r\n\t\t\t<div className='center'>\r\n\t\t\t\t<div className='form center pa4 br3 shadow-5'>\r\n\t\t\t\t\t<input className='f4 pa2 w-70 center' type='tex' onChange={onInputChange} />\r\n\t\t\t\t\t<button className='w-30 grow f4 link ph3 pv2 dib white bg-light-purple' onClick={onButtonSubmit}>Detect</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\t\r\n\t\t);\r\n}\r\n\r\nexport default ImageLinkForm;","import React from 'react';\r\n\r\n\r\nconst Rank= ({name,entries}) => {\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<div className='white f3'>\r\n\t\t\t\t{`${name},your search count is`}\r\n\t\t\t</div>\r\n\t\t\t<div className='white f1'>\r\n\t\t\t\t{entries}\r\n\t\t\t</div>\r\n\t\t</div>\t\r\n\t\t);\r\n}\r\n\r\nexport default Rank;","import React from 'react';\r\nimport './FaceRecognition.css'\r\n\r\n\r\nconst FaceRecognition = ({imgUrl,box}) => {\r\n\treturn(\r\n\t\t<div className='center ma'>\r\n\t\t\t<div className='absolute mt2'>\r\n\t\t\t\t<img id='inputimage' alt='' src={imgUrl} width='350px' height='auto'/>\r\n\t\t\t\t<div className='bounting-box' style={{top:box.topRow,right:box.rightCol,bottom:box.bottomRow,left:box.leftCol}}></div>\r\n\t\t\t</div>\t\r\n\t\t</div>\t\r\n\t\t);\r\n}\r\n\r\nexport default FaceRecognition;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t","import React from 'react';\r\n\r\n\r\nclass SignIn extends React.Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state={\r\n\t\t\tsignInEmail:'',\r\n\t\t\tsignInPassword:''\r\n\t\t}\r\n\t}\r\n\tonEmailChange=(event)=>{\r\n\t\tthis.setState({signInEmail:event.target.value})\r\n\t}\r\n\r\n\tonPasswordChange=(event)=>{\r\n\t\tthis.setState({signInPassword:event.target.value})\r\n\t}\r\n\r\n\tonSubmitSignIn=()=>{\r\n\t\tfetch('https://blooming-forest-44537.herokuapp.com/signin',{\r\n\t\t\tmethod:'post',\r\n\t\t\theaders:{'content-type':'application/json'},\r\n\t\t\tbody:JSON.stringify({\r\n\t\t\t\temail:this.state.signInEmail,\r\n\t\t\t\tpassword:this.state.signInPassword,\r\n\t\t\t})\r\n\t\t})\r\n\t\t.then(response=>response.json())\r\n\t\t .then(user => {\r\n        if(user.id){\r\n          this.props.loadUser(user);\r\n          this.props.onRouteChange('home');\r\n        }\r\n      })\r\n\t\t\r\n\t\t\r\n\t}\r\n\r\n\trender(){\r\n\t\tconst {onRouteChange}=this.props;\r\n\t\treturn(\r\n\t\t<article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow center\">\r\n\t\t\t<main className=\"pa4 black-80\">\r\n\t\t\t  <div className=\"measure\">\r\n\t\t\t    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n\t\t\t      <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\r\n\t\t\t      <div className=\"mt3\">\r\n\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n\t\t\t        <input onChange={this.onEmailChange}\r\n\t\t\t        className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\"/>\r\n\t\t\t      </div>\r\n\t\t\t      <div className=\"mv3\">\r\n\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n\t\t\t        <input onChange={this.onPasswordChange}\r\n\t\t\t        className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" ame=\"password\"  id=\"password\"/>\r\n\t\t\t      </div>\r\n\t\t\t      \r\n\t\t\t    </fieldset>\r\n\t\t\t    <div className=\"\">\r\n\t\t\t      <input \r\n\t\t\t      onClick={this.onSubmitSignIn}\r\n\t\t\t      className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Sign In\"/>\r\n\t\t\t    </div>\r\n\t\t\t    <div className=\"lh-copy mt3\">\r\n\t\t\t      <p style={{cursor:'pointer'}}onClick={()=>onRouteChange('register')}className=\"f6 link dim black db\">Register</p>\r\n\t\t\t      \r\n\t\t\t    </div>\r\n\t\t\t  </div>\r\n\t\t\t</main>\r\n\t\t</article>\t\r\n\t\t\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default SignIn;","import React from 'react';\r\n\r\n\r\nclass Register extends React.Component{\r\n\t\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state={\r\n\t\t\temail:'',\r\n\t\t\tpassword:'',\r\n\t\t\tname:''\r\n\t\t}\r\n\t}\r\n\r\n\tonNameChange=(event)=>{\r\n\t\tthis.setState({name:event.target.value})\r\n\t}\r\n\r\n\tonEmailChange=(event)=>{\r\n\t\tthis.setState({email:event.target.value})\r\n\t}\r\n\r\n\tonPasswordChange=(event)=>{\r\n\t\tthis.setState({password:event.target.value})\r\n\t}\r\n\r\n\r\n\tonSubmitSignIn=()=>{\r\n\t\tfetch('https://blooming-forest-44537.herokuapp.com/register',{\r\n\t\t\tmethod:'post',\r\n\t\t\theaders:{'content-type':'application/json'},\r\n\t\t\tbody:JSON.stringify({\r\n\t\t\t\temail:this.state.email,\r\n\t\t\t\tpassword:this.state.password,\r\n\t\t\t\tname:this.state.name,\r\n\t\t\t})\r\n\t\t})\r\n\t\t.then(response=>response.json())\r\n\t\t.then(user=>{\r\n\t\t\tif(user.id){\r\n\t\t\t\tthis.props.loadUser(user);\r\n\t\t\t\tthis.props.onRouteChange('home');\r\n\t\t\t}\r\n\t\t\t\r\n\t\t})\r\n\t\t\r\n\t\t\r\n\t}\r\n\r\n\r\n\trender(){\r\n\t\t\r\n\t\treturn(\r\n\t\t<article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow center\">\r\n\t\t\t<main className=\"pa4 black-80\">\r\n\t\t\t  <div className=\"measure\">\r\n\t\t\t    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n\t\t\t      <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\r\n\t\t\t      <div className=\"mt3\">\r\n\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\r\n\t\t\t        <input\r\n\t\t\t        onChange={this.onNameChange} \r\n\t\t\t        className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"text\" name=\"name\"  id=\"name\"/>\r\n\t\t\t      </div>\r\n\t\t\t      <div className=\"mt3\">\r\n\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n\t\t\t        <input \r\n\t\t\t        onChange={this.onEmailChange}\r\n\t\t\t        className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\"/>\r\n\t\t\t      </div>\r\n\t\t\t      <div className=\"mv3\">\r\n\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n\t\t\t        <input \r\n\t\t\t        onChange={this.onPasswordChange}\r\n\t\t\t        className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" ame=\"password\"  id=\"password\"/>\r\n\t\t\t      </div>\r\n\t\t\t      \r\n\t\t\t    </fieldset>\r\n\t\t\t    <div className=\"\">\r\n\t\t\t      <input \r\n\t\t\t      onClick={this.onSubmitSignIn}\r\n\t\t\t      className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Register and SignIn\"/>\r\n\t\t\t    </div>\r\n\t\t\t \r\n\t\t\t  </div>\r\n\t\t\t</main>\r\n\t\t</article>\t\r\n\t\t\r\n\t\t);\r\n\t}\r\n}\r\nexport default Register;","import React, {Component} from 'react';\r\nimport Navigation from './components/Navigation.js';\r\nimport Logo from './components/Logo.js';\r\nimport ImageLinkForm from './components/ImageLinkForm.js';\r\nimport Rank from './components/Rank.js';\r\nimport FaceRecognition from './components/FaceRecognition.js';\r\nimport SignIn from './components/SignIn.js';\r\nimport Register from './components/Register.js';\r\nimport Particles from 'react-particles-js';\r\nimport Clarifai from 'clarifai';\r\nimport './App.css';\r\n\r\n\r\nconst app = new Clarifai.App({\r\n  apiKey: \"32a9d392f9fc4530ad945c248c4ae3c0\",\r\n});\r\n\r\nconst initialState ={\r\n      input:'',\r\n      imgUrl:'',\r\n      box:{},\r\n      route:'signin',\r\n      isSignedIn:false,\r\n      user:{\r\n\r\n          id:'',\r\n          name:'',\r\n          email:'',\r\n\r\n          entries:0,\r\n          joined:''\r\n      }\r\n}\r\nclass App extends Component {\r\n  constructor(){\r\n    super();\r\n    this.state=initialState;\r\n  }\r\n\r\n\r\n  loadUser=(data)=>{\r\n    this.setState({user:{\r\n         id:data.id,\r\n         name:data.name,\r\n         email:data.email,\r\n         entries:data.entries,\r\n         joined:data.joined\r\n    }})\r\n  }\r\n\r\n  onInputChange=(event)=>{\r\n    this.setState({input:event.target.value});\r\n  }\r\n\r\n  calculateFaceLocation=(data)=>{\r\n    const clarifaiFace=data.outputs[0].data.regions[0].region_info.bounding_box;\r\n    const image=document.getElementById('inputimage');\r\n    const width=Number(image.width);\r\n    const height=Number(image.height);\r\n    return{\r\n      leftCol:clarifaiFace.left_col*width,\r\n      topRow:clarifaiFace.top_row*height,\r\n      rightCol:width-(clarifaiFace.right_col*width),\r\n      bottomRow:height-(clarifaiFace.bottom_row*height)\r\n    }\r\n  }\r\n\r\n  displayFaceBox=(box)=>{\r\n    this.setState({box:box});\r\n    console.log(box);\r\n  }\r\n\r\n  onButtonSubmit=()=>{\r\n     this.setState({imgUrl:this.state.input});\r\n    app.models.predict(Clarifai.FACE_DETECT_MODEL,this.state.input)\r\n      .then(response=>{\r\n        if(response){\r\n          fetch('https://blooming-forest-44537.herokuapp.com/image',{\r\n            method:'put',\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({\r\n              id:this.state.user.id\r\n            })\r\n          })\r\n          .then(response=>response.json())\r\n          .then(count=>{\r\n            this.setState(Object.assign(this.state.user,{entries:count}))\r\n          })\r\n          this.displayFaceBox(this.calculateFaceLocation(response))\r\n        }\r\n    })\r\n      .catch(err=>console.log(\"Here is the mistake\",err));\r\n  }\r\n\r\n  onRouteChange=(route)=>{\r\n    if(route==='signout'){\r\n      this.setState(initialState)\r\n    }else if(route==='home'){\r\n      this.setState({isSignedIn:true})\r\n    }\r\n    this.setState({route:route});\r\n  }\r\n\r\n  render(){\r\n      return (\r\n      <div className=\"App\">\r\n        <Particles className='particles'/>\r\n        <Navigation isSignedIn={this.state.isSignedIn} onRouteChange={this.onRouteChange}/>\r\n        {this.state.route==='home'\r\n        ?<div>\r\n          <Logo/>\r\n          <Rank name={this.state.user.name} entries={this.state.user.entries}/>\r\n          <ImageLinkForm onInputChange={this.onInputChange} \r\n          onButtonSubmit={this.onButtonSubmit}/>\r\n          <FaceRecognition box={this.state.box} imgUrl={this.state.imgUrl}/>\r\n        </div>\r\n        \r\n        :(\r\n          this.state.route==='signin'\r\n          ?<SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\r\n          :<Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>)\r\n      }\r\n      </div>\r\n  );\r\n  }\r\n  \r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/brain.9936776a.png\";"],"sourceRoot":""}